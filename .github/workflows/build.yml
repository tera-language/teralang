on: push

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        goos: [darwin, linux, windows]
        goarch: [amd64, arm64]
        include:
          - os: macos-latest
            goos: darwin
          - os: ubuntu-latest
            goos: linux
          - os: windows-latest
            goos: windows
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.goos }}-${{ matrix.goarch }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build
        shell: bash
      - run: mv teralang teralang-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}
        if: ${{ matrix.os != 'windows-latest' }}
      - run: mv teralang.exe teralang-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}.exe
        shell: bash
        if: ${{ matrix.os == 'windows-latest' }}
      - uses: actions/upload-artifact@v4
        if: ${{ matrix.os != 'windows-latest' }}
        with:
          name: teralang-${{ matrix.goos }}-${{ matrix.goarch }}
          path: teralang-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}
      - uses: actions/upload-artifact@v4
        if: ${{ matrix.os == 'windows-latest' }}
        with:
          name: teralang-${{ matrix.goos }}-${{ matrix.goarch }}
          path: teralang-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}.exe
